优先级：
不同选择器具有不同的优先级，优先级高的选择器样式会覆盖优先级低的选择器样式
优先级公式：继承<通配符选择器<标签选择器<类选择器<id选择器<行内样式<!important（越精准，优先级越高）
注意点：
!important写在属性值的后面，分号的前面
!important不能提升继承的优先级，只要是继承优先级最低
实际开发中不建议使用!important


权重叠加计算：
场景：如果是复合选择器，此时需要通过权重叠加计算方法，判断最终哪个选择器优先级最高会生效
权重叠加计算公式：行内样式个数（第一级）、id选择器的个数（第二级）、类选择器的个数（第三级）、标签选择器的个数（第四级）
比较规则：
先比较第一级数字的个数，如果比较出来了，之后的统统不看
如果第一级数字相同，此时再去比较第二级数字，如果比较出来了，之后的统统不看
如果最终所有数字都相同，表示优先级相同，则比较层叠性
注意点：!important如果不是继承，则权重最高

实际开发中选择标签需要精准，尽量避免多个选择器同时选中一个标签的情况


盒子的概念：
页面中的每一个标签，都可以看做是一个盒子，通过盒子的视角更方便进行布局
浏览器在渲染网页时，会将网页中的元素看做是一个个的矩形区域，我们也形象的称之为盒子

盒子模型：
CSS中规定每个盒子分别由：内容（content）、内边距区域（padding）、边框区域（border）、外边距区域（margin）构成


清除默认内外边距：
场景：浏览器会默认给部分标签设置默认的margin与padding，但一般在羡慕开始前需要先清除这些标签默认的margin与padding，后续自己设置
body标签默认有margin：8px
p标签默认有上下margin
ul标签默认有上下margin和padding-left
......



外边距折叠现象-合并现象
场景：垂直布局的块元素
结果：最终两者距离为margin的最大值（并不会累加margin）
解决方法：只给其中一个格子设置margin即可


外边距折叠现象-塌陷现象
场景：互相嵌套的块级元素，父子元素上部分紧贴，导致子元素的margin-top会作用在父元素上
结果：导致父元素一起往下移动
解决方法：
给父元素设置border-top或者padding-top（分离父子元素的margin-top）
给父元素设置overflow: hidden
转换成行内块元素
设置浮动


行内元素的margin和padding无效的情况
场景：给行内元素设置margin和padding
结果：
水平方向的margin和padding布局中生效
垂直方向的margin和padding布局中无效


不会撑大盒子的特殊情况（块级元素）：
如果子盒子目的有设置宽度，此时宽度默认是父盒子的宽度
此时给子盒子设置左右的padding或者左右的margin，盒子不会被撑大
