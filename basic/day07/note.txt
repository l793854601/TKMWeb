网页常见布局方式：

标准流：
块级元素独占一行->垂直布局
行内元素/行内块元素一行显示多个->水平布局

浮动：
可以让原本垂直布局的块级元素变成水平布局

定位：
可以让元素自由的摆放在网页的任意位置
一般用于盒子之间的层叠情况


定位常见的应用场景：
可以解决盒子与盒子之间的层叠问题
定位之后的元素层级最高，可以层叠在其他盒子上面

可以让盒子始终固定在屏幕中的某个位置
定位之后的盒子脱离了标准流（脱标）


设置定位方式：
属性名：position
属性值：static、relative、absolute、fixed

设置偏移值：
偏移值设置分别为两个方向，水平和垂直方向个选一个使用即可
选取的原则一般是就近原则（离那边近用哪个）

left：数字+px，距离左边的距离
right：数字+px，距离右边的距离
top：数字+px，距离上边的距离
bottom：数字+px，距离下边的距离


静态定位：
介绍：静态定位是默认值，就是之前认识的标准流
代码：position: static
注意点：
静态定位就是之前标准流，不能通过方位属性进行移动
之后说的定位不包括静态定位，一般特指后几种：相对、绝对、固定


相对定位：
介绍：自恋型定位，相对于自己之前的位置进行移动
代码：position: relative
特点：
相对定位需要配合方位属性实现移动
相对于自己原来的位置进行移动
在页面中占位置（没有脱标），也不会改变元素原有的display属性
应用场景：
配合绝地定位组CP（子绝父相）
用于小范围的移动


绝对定位：
介绍：拼爹型定位，相对于非静态定位的父元素进行定位移动
代码：position: absolute
特点：
需要配和方位属性实现移动
默认相对于浏览器可视区域进行移动
在页面中不占位置（已经脱标），且具有行内块元素的特点（可设置宽高，如果之前为块元素且没设置宽高，则元素不会显示出来）
应用场景：
配合绝对定位组CP（子绝父相）


绝对定位到底相对于谁进行便宜：
祖先元素没有定位->默认相对于浏览器进行移动
祖先元素中有定位->相对于最近的有定位的祖先元素进行移动


子绝父相介绍：
场景：让子元素相对于父元素进行自由移动
含义：
子元素：绝对定位
父元素：相对定位
子绝父相好处：
父元素相对定位，则对网页布局影响最小
注意点：
如果父元素未设置定位，则父元素设置相对定位，否则不要改变父元素原有的定位，以免引起布局错乱


固定定位：
介绍：死心眼型定位，相对于浏览器进行定位移动
代码：position: fixed
特点：
需要配合方位属性实现移动
相对于浏览器可视区域进行移动
在页面中不占位置（已经脱标）
应用场景：
让盒子固定在屏幕中的某个位置


元素的层级问题：
不同布局方式元素的层级关系：
标准流<浮动<定位

不同定位之间的层级关系：
相对、绝对、固定默认层级相同
此时HTML中写在下面的元素层级更高，会覆盖上面的元素（后来者居上）


更改定位元素的层级：
属性名：z-index
属性值：数字（数字越大，层级越高）


文字对齐问题：
场景：解决行内/行内块元素垂直对齐问题
问题：当图片个文字在一行中显示时，其实底部是不对齐的（默认情况下，图片底部与文字基线对齐）

垂直对齐方式：
属性名：vertical-align
属性值：baseline（默认，基线对齐）、top（顶部对齐）、middle（中部对齐）、bottom（底部对齐）

项目中vertical-align可以解决的文体：
文本框和表单按钮无法对齐的问题
input和img无法对齐的问题
div的文本框，文本框无法贴顶问题
div不设高度由img标签撑开，此时img标签下面会存在额外间隙问题
使用line-height让img标签垂直居中问题

注意点：
学习浮动之后，不推荐使用行内块元素让div一行中显示，因为可能会出现垂直对齐问题
推荐优先使用浮动完成效果


光标类型：
场景：设置鼠标光标在元素上时显示的样式
属性名：cursor
属性值：
default（默认，通常是箭头）
pointer（小手效果，提示用户可以点击）
text（工字型，提示用户可以选择文字）
move（十字光标，提示用户可以移动）


边框圆角：
场景：让河西四个角变得圆润，增加页面细节，提升用户体验
属性值：border-radius
常见取值：数字+px、百分比
原理：0为没有圆角，长度一半为圆形
赋值规则：从左上角开始赋值，然后顺时针赋值，没有赋值的看对角


溢出部分显示效果：
溢出部分：指的是盒子内容部分所超出盒子范围的区域
场景：控制内容溢出部分的显示效果，如：显示、隐藏、滚动条...
属性值：overflow
属性值：
visible：默认值，溢出部分可见
hidden：溢出部分隐藏
scroll：无论是否移除，都显示滚动条
auto：根据是否移除，自动显示或隐藏滚动条


元素本身隐藏：
场景：让某元素本身在屏幕中不可见。如：鼠标悬停（hover）之后元素隐藏
常见属性：
visibity：hidden
display：none
区别：
visibity：hidden 隐藏元素本身，并且在网页中占位置（参考安卓控件visibity: invisible）
display：none 隐藏元素本身，并且在网页中不占位置（参考安卓控件visibity: gone
注意点：
开发中经常会通过display属性完成元素的显示隐藏和切换
display: none（隐藏）、display: block（显示）


元素整体透明度：
场景：让元素整体（包括内容）一起变透明
属性名：opacity
属性值：0~1（0表示完全透明，1表示完全不透明）


边框合并：
场景：让相邻表格边框进行合并，得到细线边框效果
代码：border-collapse: collapse


链接伪类选择器：
场景：常用语选中超链接的不同状态
选择器语法：
a:link { }：选中a链接未访问过的状态
a:visited { }：选中a链接访问之后的状态
a:hover { }：选中鼠标悬停的状态
a:active { }：选中鼠标按下的状态
注意点：
如果想都实现以上结果，需要按照LVHA顺序书写
其中:hover伪类选择器使用更为频繁，常用语选择各类元素的悬停效果


如何用CSS画三角形：
场景：在网页中展示出小三角形，除了可以使用图片，还可以使用代码
实现原理：利用盒子边框完成
实现步骤：
设置一个盒子
设置四周不同颜色的边框（边框实际为梯形）
将盒子宽高设置为0，进保留边框
得到四个三角形，选择其中一个后，其他三角形（边框）设置颜色为透明


焦点伪类选择器：
场景：用于选中元素获取焦点时的状态，常用于表单控件
选择器语法：
input: focus {
    background-color: skyblue;
}
效果：表单控件获取焦点时默认会显示外部轮廓线


属性选择器：
场景：通过元素上的HTML属性来选择元素，常用于选择input标签
选择器语法：
E[attr]：选择具有attr属性的E元素
E[attr="val]：选择具有attr属性并且属性值等于val的E元素
